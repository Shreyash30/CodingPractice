link: https://leetcode.com/problems/spiral-matrix/

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* spiralOrder(int** matrix, int matrixSize, int* matrixColSize, int* returnSize) {
    int *arr=(int *)malloc(sizeof(int)*(matrixSize*(*matrixColSize)));
    int j=0,top=0,left=0,dir=1,bottom=matrixSize-1,right=(*matrixColSize)-1;
     while (top <= bottom && left <= right) {

    if (dir == 1) {    // moving left->right
      for (int i = left; i <= right; i++) {
        arr[j++]=matrix[top][i];
      }
      // Since we have traversed the whole first
      // row, move down to the next row.
      ++top;
      dir = 2;
    } 
    else if (dir == 2) {     // moving top->bottom
      for (int i = top; i <= bottom; i++) {
          arr[j++]=matrix[i][right];
      }
      // Since we have traversed the whole last
      // column, move left to the previous column.
      --right;
      dir = 3;
    } 
    else if (dir == 3) {     // moving right->left
      for (int i = right; i >= left; i--) {
          arr[j++]=matrix[bottom][i];
      }
      // Since we have traversed the whole last
      // row, move up to the previous row.
      --bottom;
      dir = 4;
    } 
    else if (dir == 4) {     // moving bottom->up
      for (int i = bottom; i >= top; i--) {
          arr[j++]=matrix[i][left];
      }
      // Since we have traversed the whole first
      // col, move right to the next column.
      ++left;
      dir = 1;
    }}
       *returnSize=j;
       return arr;
}
