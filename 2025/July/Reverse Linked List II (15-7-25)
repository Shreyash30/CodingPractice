link: https://leetcode.com/problems/reverse-linked-list-ii/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 struct ListNode* reverse(struct ListNode *head)
 {
    if(head==NULL || head->next==NULL)
    return head;
    struct ListNode *newhead=reverse(head->next);
    head->next->next=head;
    head->next=NULL;
    return newhead;
 }
struct ListNode* reverseBetween(struct ListNode* head, int left, int right) {
    int count=0;
    struct ListNode *temp=head,*start,*end,*beforestart=0;
    while(temp!=0)
    {
        count++;
       if(count==(left-1))
        beforestart=temp;
        if(count==left)
        start=temp;
        if(count==right)
        end=temp;
        temp=temp->next;
    }
     struct ListNode *endnext=end->next;
     end->next=0;
     end=reverse(start); //newhead is stored in end pointer
     start->next=endnext;
   if(beforestart!=0)
     beforestart->next=end;
     if(beforestart==0)
     return end;
     return head;
}
