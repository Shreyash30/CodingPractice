link: https://leetcode.com/problems/rotate-list/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 struct ListNode *reverse(struct ListNode *head)
 {
    if(head==NULL || head->next==NULL)
    return head;
    struct ListNode *newhead=reverse(head->next);
    head->next->next=head;
    head->next=NULL;
    return newhead;
 }
struct ListNode* rotateRight(struct ListNode* head, int k) {
    if(head==NULL || head->next==NULL)
   { return head;}
    // Count length
    int len = 0;
    struct ListNode* temp = head;
    while (temp!=0) {
        len++;
        temp = temp->next;
    }

    k = k % len;
    if (k == 0) return head;
    struct ListNode *lastnode=head;
    head=reverse(head);
    temp=head;
    for(int i=0;i<k;i++)
    {
        head=head->next;
        temp->next=0;
        lastnode->next=temp;
        lastnode=temp;
        temp=head;
    }
    head=reverse(head);
    return head;
}
