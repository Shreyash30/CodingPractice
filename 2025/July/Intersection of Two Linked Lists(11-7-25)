link: https://leetcode.com/problems/intersection-of-two-linked-lists/description/

struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) {

    struct ListNode *temp = headA;
    while (temp->next != NULL)
        temp = temp->next;

    /// now temp points to the last node in headA

    temp->next = headB;  // temporarily link end of A to start of B

    struct ListNode *fast = headA;  /// fast pointer
    struct ListNode *slow = headA;  /// slow pointer

    // Floyd's Cycle Detection Algorithm
    while (fast != NULL && fast->next != NULL) {
        slow = slow->next;
        fast = fast->next->next;

        if (fast == slow) {
            slow = headA;
            while (fast != slow) {
                fast = fast->next;
                slow = slow->next;
            }

            // break the temporary link before returning
            temp->next = NULL;
            return fast;
        }
    }

    temp->next = NULL;
    return NULL;
}
