link: https://leetcode.com/problems/partition-array-according-to-given-pivot/description/

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* pivotArray(int* nums, int numsSize, int pivot, int* returnSize) {
    int* arr=(int*)malloc(sizeof(int)*numsSize);
    *returnSize=numsSize;
    int small[numsSize];int large[numsSize]; int count=0,sizes=0,sizel=0,size=0;
    for(int i=0;i<numsSize;i++)
    {
        if(nums[i]==pivot)
        count++;
        else if(nums[i] < pivot)
        small[sizes++]=nums[i];
        else
        large[sizel++]=nums[i];
    }
    for(int i=0;i<sizes;i++)
    {
        arr[size++]=small[i];
    }
    for(int i=1;i<=count;i++)
    {
        arr[size++]=pivot;
    }
   for(int i=0;i<sizel;i++)
    {
        arr[size++]=large[i];
    }
    return arr;
}
