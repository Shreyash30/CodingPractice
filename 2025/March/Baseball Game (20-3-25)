link: https://leetcode.com/problems/baseball-game/description/

int calPoints(char** operations, int operationsSize) {
    int *record = (int*) malloc(sizeof(int)*operationsSize); // Array to store scores
    int index = 0;       // Keeps track of the current position in the record
    int sum = 0;         // Stores the total sum of the scores

    for (int i = 0; i < operationsSize; i++) {
        if (isdigit(operations[i][0]) || (operations[i][0] == '-' && isdigit(operations[i][1]))) {
            // If the operation is an integer or negative number, add it to the record
            int score = atoi(operations[i]);
            record[index++] = score;
        } 
        else if (strcmp(operations[i], "C") == 0) {
            // Invalidate the previous score
            if (index > 0) {
                index--;
            }
        } 
        else if (strcmp(operations[i], "D") == 0) {
            // Double the previous score
            if (index > 0) {
                record[index] = 2 * record[index - 1];
                index++;
            }
        } 
        else if (strcmp(operations[i], "+") == 0) {
            // Sum of the previous two scores
            if (index >= 2) {
                record[index] = record[index - 1] + record[index - 2];
                index++;
            }
        }
    }

    // Calculate the total sum
    for (int i = 0; i < index; i++) {
        sum += record[i];
    }

    return sum;
}
